% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Model.R
\name{Model}
\alias{Model}
\alias{new_model}
\title{Model Class}
\usage{
new_model(
  engine = NULL,
  preproc_calls = NULL,
  fit_params = NULL,
  fit_param_specs = NULL
)
}
\arguments{
\item{engine}{A character scalar of model engines.}

\item{preproc_calls}{A \code{\link{PreprocCalls}} class object.}

\item{fit_params}{A \code{\link{FitParams}} class object. If \code{NULL},
\code{\link{FitParams}} with an emtpy list parameter is created.}

\item{fit_param_specs}{A \code{\link{FitParamSpecs}} class object. If
\code{NULL}, default specs is used. (If defined by the pacakge)}
}
\value{
A new \code{Model} class object.
}
\description{
A class defines the model specifications.
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{engine}}{A model engine.}

\item{\code{fit_params}}{\link{FitParams} class object.}

\item{\code{fit_param_specs}}{A \link{FitParamSpecs} class object.}

\item{\code{preproc_calls}}{A \link{PreprocCalls} class object.}

\item{\code{has_fit_param_specs}}{Wheather the model has fit_param_specs.}

\item{\code{spec}}{A \code{list} of model specifications.}

\item{\code{data_call}}{A \code{call} used to convert a \code{data.frame} to the format
suited for the model input.}

\item{\code{fit_call}}{A \code{\link{call}} in fit routine.}

\item{\code{pred_call}}{A \code{\link{call}} in predict routine.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Model$new()}}
\item \href{#method-print}{\code{Model$print()}}
\item \href{#method-get_fit_call_by_key}{\code{Model$get_fit_call_by_key()}}
\item \href{#method-get_fit_call}{\code{Model$get_fit_call()}}
\item \href{#method-clone}{\code{Model$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Construct a new \code{Model} class object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Model$new(
  engine = NULL,
  preproc_calls = NULL,
  fit_params = NULL,
  fit_param_specs = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{engine}}{A character scalar of model engines.}

\item{\code{preproc_calls}}{A \link{PreprocCalls} class object.}

\item{\code{fit_params}}{A \link{FitParams} class object. If \code{NULL}, \link{FitParams}
with an emtpy list parameter is created.}

\item{\code{fit_param_specs}}{A \link{FitParamSpecs} class object. If \code{NULL},
default specs is used. (If defined by the pacakge)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{Model} class object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
Print object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Model$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_fit_call_by_key"></a>}}
\if{latex}{\out{\hypertarget{method-get_fit_call_by_key}{}}}
\subsection{Method \code{get_fit_call_by_key()}}{
Get a model's fit call by a fit_params key.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Model$get_fit_call_by_key(fit_param_key = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fit_param_key}}{A character or integer scalar of the fit_params
keys.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A call of the model fit.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_fit_call"></a>}}
\if{latex}{\out{\hypertarget{method-get_fit_call}{}}}
\subsection{Method \code{get_fit_call()}}{
Get a model's fit call by a fit_param.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Model$get_fit_call(fit_param = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fit_param}}{A list of fit parameters.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A call of the model fit.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Model$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
