% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Datasets.R
\name{Datasets}
\alias{Datasets}
\alias{new_datasets}
\title{Datasets Class}
\usage{
new_datasets(
  ...,
  .id_col = NULL,
  .test_ids = NULL,
  .resample_calls = NULL,
  .value_width = Inf
)
}
\arguments{
\item{...}{Key and value pairs.}

\item{.id_col}{A character scalar. An id column name contains integer ids.
Leave \code{NULL} if dataset does not have id column.}

\item{.test_ids}{A integer vector specifiying test data. If \code{id_col}
is not \code{NULL}, \code{test_ids} must be \code{id_col} ranges.
If \code{NULL} \code{test_ids} are considered as row numbers.}

\item{.resample_calls}{A \link{ResampleCalls} class object.}

\item{.value_width}{A integer scalar of character length. Used as max
width of output value by \code{self$print()} method.}
}
\value{
A new \link{Datasets} class object
}
\description{
Key-value dictionary contains \code{data.frame} class objects.
This class is used to extract train and test data for model input, and also
contains \link{ResampleCalls} class object to generate resamples.
}
\section{Super classes}{
\code{\link[Dict:Dict]{Dict::Dict}} -> \code{\link[ml4e:Option]{ml4e::Option}} -> \code{Datasets}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{id_col}}{An id column name.}

\item{\code{test_ids}}{Test data ids.}

\item{\code{resample_calls}}{A \link{ResampleCalls} class object.}

\item{\code{has_id_col}}{Wheather to have \code{id_col}.}

\item{\code{has_test_ids}}{Wheather to have \code{test_ids}.}

\item{\code{has_resample_calls}}{Wheather to have \code{resample_calls}.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Datasets$new()}}
\item \href{#method-print}{\code{Datasets$print()}}
\item \href{#method-add}{\code{Datasets$add()}}
\item \href{#method-get}{\code{Datasets$get()}}
\item \href{#method-get_train}{\code{Datasets$get_train()}}
\item \href{#method-get_test}{\code{Datasets$get_test()}}
\item \href{#method-get_resample}{\code{Datasets$get_resample()}}
\item \href{#method-clone}{\code{Datasets$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="Dict" data-topic="Dict" data-id="has">}\href{../../Dict/html/Dict.html#method-has}{\code{Dict::Dict$has()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="Dict" data-topic="Dict" data-id="sort">}\href{../../Dict/html/Dict.html#method-sort}{\code{Dict::Dict$sort()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ml4e" data-topic="Option" data-id="clear">}\href{../../ml4e/html/Option.html#method-clear}{\code{ml4e::Option$clear()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ml4e" data-topic="Option" data-id="print_items">}\href{../../ml4e/html/Option.html#method-print_items}{\code{ml4e::Option$print_items()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ml4e" data-topic="Option" data-id="remove">}\href{../../ml4e/html/Option.html#method-remove}{\code{ml4e::Option$remove()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Construct a new \code{Datasets} class object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Datasets$new(
  ...,
  .id_col = NULL,
  .test_ids = NULL,
  .resample_calls = NULL,
  .value_width = Inf
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Key and value pairs.}

\item{\code{.id_col}}{A character scalar. An id column name contains integer
ids. Leave \code{NULL} if dataset does not have id column.}

\item{\code{.test_ids}}{A integer vector specifiying test data. If \code{id_col} is
not \code{NULL}, \code{test_ids} must be \code{id_col} ranges. If \code{NULL} \code{test_ids} are
considered as row numbers.}

\item{\code{.resample_calls}}{A \link{ResampleCalls} class object.}

\item{\code{.value_width}}{A integer scalar of character length. Used as max
width of output value by \code{self$print()} method.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{Datasets} class object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
Print object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Datasets$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-add"></a>}}
\if{latex}{\out{\hypertarget{method-add}{}}}
\subsection{Method \code{add()}}{
Adds key-value objects to the dictionary.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Datasets$add(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Key and value pairs.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get"></a>}}
\if{latex}{\out{\hypertarget{method-get}{}}}
\subsection{Method \code{get()}}{
Get data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Datasets$get(key = NULL, preproc_call = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{key}}{A character or integer scalar of the keys.}

\item{\code{preproc_call}}{A \code{call} to convert data.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \code{data.frame}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_train"></a>}}
\if{latex}{\out{\hypertarget{method-get_train}{}}}
\subsection{Method \code{get_train()}}{
Get train data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Datasets$get_train(key = NULL, preproc_call = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{key}}{A character or integer scalar of the keys.}

\item{\code{preproc_call}}{A \code{call} to convert data.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \code{data.frame} of train data.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_test"></a>}}
\if{latex}{\out{\hypertarget{method-get_test}{}}}
\subsection{Method \code{get_test()}}{
Get test data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Datasets$get_test(key = NULL, preproc_call = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{key}}{A character or integer scalar of the keys.}

\item{\code{preproc_call}}{A \code{call} to convert data.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \code{data.frame} of test data.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_resample"></a>}}
\if{latex}{\out{\hypertarget{method-get_resample}{}}}
\subsection{Method \code{get_resample()}}{
Get resample data. Internally call \code{self$resample_calls$get_resample()}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Datasets$get_resample(
  dataset_key = NULL,
  resample_call_key = NULL,
  seed = NULL,
  preproc_call = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataset_key}}{A character or integer scalar of the datasets keys.}

\item{\code{resample_call_key}}{A character or integer scalar of the
resample_calls keys.}

\item{\code{seed}}{A integer scalar seed.}

\item{\code{preproc_call}}{A \code{call} to convert data.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A resample of \code{rset} class object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Datasets$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
