% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SearchGrid.R
\name{SearchGrid}
\alias{SearchGrid}
\alias{new_search_grid}
\title{SearchGrid Class}
\usage{
new_search_grid(options = NULL, keys = NULL)
}
\arguments{
\item{options}{A \link{Options} class object.}

\item{keys}{A named character vector of keys.}
}
\value{
A new \code{SearchGrid} class object
}
\description{
A class defines a grid search task specification.
}
\section{Super classes}{
\code{\link[ml4e:Task]{ml4e::Task}} -> \code{\link[ml4e:SearchBase]{ml4e::SearchBase}} -> \code{SearchGrid}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{progress}}{A list of grid calculation progress.}

\item{\code{progress_str}}{A character of progress.}

\item{\code{done}}{A logical if finished}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{SearchGrid$new()}}
\item \href{#method-print}{\code{SearchGrid$print()}}
\item \href{#method-do}{\code{SearchGrid$do()}}
\item \href{#method-get_count_by_param}{\code{SearchGrid$get_count_by_param()}}
\item \href{#method-clone}{\code{SearchGrid$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="ml4e" data-topic="Task" data-id="eval_call_args">}\href{../../ml4e/html/Task.html#method-eval_call_args}{\code{ml4e::Task$eval_call_args()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ml4e" data-topic="Task" data-id="print_task">}\href{../../ml4e/html/Task.html#method-print_task}{\code{ml4e::Task$print_task()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ml4e" data-topic="SearchBase" data-id="get_best_param">}\href{../../ml4e/html/SearchBase.html#method-get_best_param}{\code{ml4e::SearchBase$get_best_param()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ml4e" data-topic="SearchBase" data-id="get_rank">}\href{../../ml4e/html/SearchBase.html#method-get_rank}{\code{ml4e::SearchBase$get_rank()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Construct a new \code{SearchGrid} class object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SearchGrid$new(options = NULL, keys = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{options}}{A \link{Options} class object.}

\item{\code{keys}}{A named character vector of keys.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{SearchGrid} class object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
Print object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SearchGrid$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-do"></a>}}
\if{latex}{\out{\hypertarget{method-do}{}}}
\subsection{Method \code{do()}}{
Run a grid search. The result will be stored in \code{self$result}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SearchGrid$do(num = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{num}}{A integer scalar of how many parameters to be calculated.
If \code{NULL}, all parameters in param set will be calculated.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_count_by_param"></a>}}
\if{latex}{\out{\hypertarget{method-get_count_by_param}{}}}
\subsection{Method \code{get_count_by_param()}}{
Get paramter's counts.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SearchGrid$get_count_by_param()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A \code{data.frame} of parameter count.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SearchGrid$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
